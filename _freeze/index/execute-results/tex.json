{
  "hash": "7cf7ca0a61ff7f27ccb992d042849088",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Temperetura RIDE\nauthor:\n  - name: Carolina Musso\n    orcid: 0000-0002-8107-6458\n    corresponding: true\n    email: cmusso86@gmail.com\n    roles:\n      - Mestranda PPGEST\n    affiliations:\n      - Universidade de Bras√≠lia\n  \nkeywords:\n  - Krigging\n  - Temperatura\nlang: pt\nabstract: |\n  In September 2021, a significant jump in seismic activity on the island of La Palma (Canary Islands, Spain) signaled the start of a volcanic crisis that still continues at the time of writing. Earthquake data is continually collected and published by the Instituto Geogr√°phico Nacional (IGN). ...\nplain-language-summary: |\n  Earthquake data for the island of La Palma from the September 2021 eruption is found ...\nkey-points:\n  - A web scraping script was developed to pull data from the Instituto Geogr√†phico Nacional into a machine-readable form for analysis\n  - Earthquake events on La Palma are consistent with the presence of both mantle and crustal reservoirs.\ndate: last-modified\nbibliography: references.bib\ncitation:\n  container-title: Earth and Space Science\nnumber-sections: true\n---\n\n\n\n\n\n## Introdu√ß√£o\n\nA temperatura doplaneta lalala\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nrm(list=ls())\nif(!require(\"pacman\")) install.packages(\"pacman\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: pacman\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npacman::p_load(\n  tidyverse, \n  sf, \n  rio,\n  rnaturalearth, \n  rnaturalearthdata, \n  sp, \n  gstat, \n  mapview,\n  ggspatial,\n  modisfast,\n  automap,\n  stars\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## ler os shapefiles com pacote sp\nride_sf <- sf::read_sf(\"RIDE/.\")\n\nride_sf |> ggplot()+\n  geom_sf() +\n  scale_fill_viridis_c() +\n  theme_minimal() +\n  labs(\n    title = \"Temperatura RIDE\",\n    subtitle = \"Temperatura m√©dia do planeta\",\n    caption = \"Fonte: RIDE\"\n  ) +\n  theme(legend.position = \"bottom\") +\n  annotation_scale(location = \"br\", width_hint = 0.5) +\n  annotation_north_arrow(location = \"tl\", style = north_arrow_fancy_orienteering)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-2-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# username <- \"\"\n# password <- \"\"\n# mf_login(credentials = c(username, password))\n# \n# \n# roi <- st_as_sf(\n#   data.frame(id = \"ride_df\",\n#              geom =  \"POLYGON ((-49.36 -17.36, -49.36 -13.10, -45.56 -13.10, -45.56 -17.36, -49.36 -17.36))\"),\n#   wkt = \"geom\", crs = 4326\n# )\n# \n# \n# collection <- \"MOD11A1.061\" #10:30\n# variables <- c(\"LST_Day_1km\")\n# time_range <- as.Date(c(\"2020-10-22\", \"2020-10-22\"))\n# \n# urls <- mf_get_url(collection = collection, variables = variables,\n#                    roi = roi, time_range = time_range)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# res <-  mf_download_data(urls)\n# \n# \n# rast <- mf_import_data(\n#   path = unique(dirname(res$destfile))[1],\n#   collection = collection,\n#   proj_epsg = 4326)\n# \n# df <- as.data.frame(rast, xy = TRUE)\n# df$lst_c <- df$LST_Day_1km - 273.15\n# \n# # 7) Exportar como CSV\n# write.csv(df[, c(\"x\",\"y\",\"lst_c\")], \"temperatura_geral.csv\", row.names = FALSE)\n# \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf <- read_csv(\"temperatura_geral.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 110038 Columns: 3\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\ndbl (3): x, y, lst_c\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndados_latlong_sf <- st_as_sf(df, coords = c(\"x\", \"y\"), crs = 4326)\n\n# 2. Reprojetar para o mesmo CRS do munic√≠pio\ndados_latlong_sf_proj <- st_transform(dados_latlong_sf, crs = st_crs(ride_sf))\n\n# 3. Filtrar apenas os pontos *dentro* do munic√≠pio\ndados_ride_latlong <- st_filter(dados_latlong_sf_proj, ride_sf)  # ‚úÖ correto!\ndados_ride_latlong <- dados_ride_latlong[seq(1, nrow(dados_ride_latlong), by = 18), ] #15 x18 16 \n\n# 6. Criar banco com latitude/longitude (graus decimais)\ndados_latlong <- dados_ride_latlong %>%\n  mutate(\n    x = st_coordinates(geometry)[,1],\n    y = st_coordinates(geometry)[,2]\n  ) %>%\n  select(lst_c, x, y) %>%\n  as.data.frame() %>%\n  select(-geometry) %>% \n  rename(avg_z=lst_c)\n\n# 7. Transformar para UTM (zona 23S - SIRGAS 2000 / EPSG:31983)\ndados_utm_sf <- st_transform(dados_ride_latlong, crs = 31983)\n\n# 8. Criar banco com coordenadas UTM (em metros)\ndados_utm <- dados_utm_sf %>%\n  mutate(\n    x = st_coordinates(geometry)[,1],\n    y = st_coordinates(geometry)[,2]\n  ) %>%\n  select(lst_c, x, y) %>%\n  as.data.frame() %>%\n  select(-geometry)%>% \n  rename(avg_z=lst_c)\n\n\n\n# 9. Exportar os dois arquivos\nwrite.csv(dados_latlong, \"RIDE_temp_latlong.csv\", row.names = FALSE)\nwrite.csv(dados_utm,     \"RIDE_temp_utm.csv\",     row.names = FALSE)\n\n#set.seed(181326) \n#set.seed(181019)# para reprodutibilidade\nset.seed(020279)\ndados_utm_sf_amostra <- dados_utm_sf |> \n  rename(temp = lst_c) |>\n  sample_n(150)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nggplot() +\n  geom_sf(data = ride_sf, fill = NA, color = \"black\", linewidth = 0.1) +  # pol√≠gono em preto\n  geom_sf(data = dados_utm_sf_amostra, aes(color = temp), size = 2) +  # pontos coloridos\n  scale_color_viridis_c(name = \"Temperatura (¬∞C)\") +\n  theme_minimal() +\n  labs(\n    title = \"Temperatura na regi√£o da RIDE\",\n    subtitle = \"Valores extra√≠dos de MODIS (LST)\",\n    caption = \"Fonte: MODIS via modisfast\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-6-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nv <- variogram(temp ~ 1, data = dados_utm_sf_amostra)\nv$dist <- v$dist / 1000  # converte dist√¢ncia para km\n\nfv <- fit.variogram(v, model = vgm(psill = 15, model = \"Sph\", range = 200, nugget = 3))\nplot(v, fv)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-7-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code .hidden}\nfv <- fit.variogram(v, model = vgm(psill = 15, model = \"Gau\", range = 200, nugget = 3))\nplot(v, fv)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-7-2.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code .hidden}\nfv <- fit.variogram(v, model = vgm(psill = 10, model = \"Exp\", range = 200, nugget = 2))\nplot(v, fv)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-7-3.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Transformar ambos para UTM zona 23S\nride_utm <- st_transform(ride_sf, 31983)\n\n\n# ‚úÖ Verifica√ß√£o da vari√°vel de temperatura\nnames(dados_utm_sf_amostra)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"temp\"     \"geometry\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nsummary(dados_utm_sf_amostra$temp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  27.04   31.72   33.41   33.99   35.65   44.91 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# üìà Variograma emp√≠rico e ajuste\nvc <- variogram(temp ~ 1, dados_utm_sf_amostra)\nvinitial <- vgm(psill = 15, model = \"Exp\", range = 150000, nugget = 3)\nfv <- fit.variogram(vc, model = vinitial)\nplot(vc, fv)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-8-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code .hidden}\n# üî≥ Criar grade regular de pontos dentro da RIDE\ngrid <- st_make_grid(ride_utm, cellsize = 1000, what = \"centers\")\ngrid_sf <- st_sf(geometry = grid, crs = st_crs(ride_utm))\ngrid_sf <- grid_sf[ride_utm, ]\n\n# ü§ñ Krigagem\nk <- gstat(formula = temp ~ 1, data = dados_utm_sf_amostra, model = fv)\nkpred <- predict(k, newdata = grid_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[using ordinary kriging]\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nkpred_sf <- st_as_sf(kpred)\n\n# üåç Proje√ß√£o para latitude/longitude\nride_latlon <- st_transform(ride_utm, 4326)\n\nkpred_latlon <- st_transform(kpred_sf, 4326)\n\n# üé® Plot final com paleta magma + nomes dos munic√≠pios\\\n\n\nggplot() +\n  geom_sf(data = kpred_latlon, aes(color = var1.pred), size = 0.6) +\n  geom_sf(data = ride_latlon, fill = NA, color = \"black\",linewidth = 0.1) +\n  geom_sf_text(data = ride_latlon, aes(label = NM_MUNICIP), size = 2, color = \"black\")+   # \n  scale_color_viridis_c(name = \"Temperatura prevista (¬∞C)\", option = \"magma\") +\n  theme_minimal() +\n  labs(\n    title = \"Krigagem da Temperatura MODIS\",\n    subtitle = \"Interpola√ß√£o espacial para a RIDE-DF\",\n    caption = \"Fonte: MODIS via modisfast\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-8-2.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## Data & Methods {#sec-data-methods}\n\n## Conclusion\n\n## References {.unnumbered}\n\n:::{#refs}\n\n:::",
    "supporting": [
      "index_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}
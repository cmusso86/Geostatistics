---
title: Temperetura RIDE
author:
  - name: Carolina Musso
    orcid: 0000-0002-8107-6458
    corresponding: true
    email: cmusso86@gmail.com
    roles:
      - Mestranda PPGEST
    affiliations:
      - Universidade de Bras√≠lia
  
keywords:
  - Krigging
  - Temperatura
lang: pt
abstract: |
  In September 2021, a significant jump in seismic activity on the island of La Palma (Canary Islands, Spain) signaled the start of a volcanic crisis that still continues at the time of writing. Earthquake data is continually collected and published by the Instituto Geogr√°phico Nacional (IGN). ...
plain-language-summary: |
  Earthquake data for the island of La Palma from the September 2021 eruption is found ...
key-points:
  - A web scraping script was developed to pull data from the Instituto Geogr√†phico Nacional into a machine-readable form for analysis
  - Earthquake events on La Palma are consistent with the presence of both mantle and crustal reservoirs.
date: last-modified
bibliography: references.bib
citation:
  container-title: Earth and Space Science
number-sections: true
---

## Introdu√ß√£o

A temperatura doplaneta lalala

```{r}
rm(list=ls())
if(!require("pacman")) install.packages("pacman")
pacman::p_load(
  tidyverse, 
  sf, 
  rio,
  rnaturalearth, 
  rnaturalearthdata, 
  sp, 
  gstat, 
  mapview,
  ggspatial,
  modisfast,
  automap,
  stars
)
```

```{r}
## ler os shapefiles com pacote sp
ride_sf <- sf::read_sf("RIDE/.")

ride_sf |> ggplot()+
  geom_sf() +
  scale_fill_viridis_c() +
  theme_minimal() +
  labs(
    title = "Temperatura RIDE",
    subtitle = "Temperatura m√©dia do planeta",
    caption = "Fonte: RIDE"
  ) +
  theme(legend.position = "bottom") +
  annotation_scale(location = "br", width_hint = 0.5) +
  annotation_north_arrow(location = "tl", style = north_arrow_fancy_orienteering)
```



```{r}

# username <- ""
# password <- ""
# mf_login(credentials = c(username, password))
# 
# 
# roi <- st_as_sf(
#   data.frame(id = "ride_df",
#              geom =  "POLYGON ((-49.36 -17.36, -49.36 -13.10, -45.56 -13.10, -45.56 -17.36, -49.36 -17.36))"),
#   wkt = "geom", crs = 4326
# )
# 
# 
# collection <- "MOD11A1.061" #10:30
# variables <- c("LST_Day_1km")
# time_range <- as.Date(c("2020-10-22", "2020-10-22"))
# 
# urls <- mf_get_url(collection = collection, variables = variables,
#                    roi = roi, time_range = time_range)
```


```{r}

# res <-  mf_download_data(urls)
# 
# 
# rast <- mf_import_data(
#   path = unique(dirname(res$destfile))[1],
#   collection = collection,
#   proj_epsg = 4326)
# 
# df <- as.data.frame(rast, xy = TRUE)
# df$lst_c <- df$LST_Day_1km - 273.15
# 
# # 7) Exportar como CSV
# write.csv(df[, c("x","y","lst_c")], "temperatura_geral.csv", row.names = FALSE)
# 


```


```{r}

df <- read_csv("temperatura_geral.csv")

dados_latlong_sf <- st_as_sf(df, coords = c("x", "y"), crs = 4326)

# 2. Reprojetar para o mesmo CRS do munic√≠pio
dados_latlong_sf_proj <- st_transform(dados_latlong_sf, crs = st_crs(ride_sf))

# 3. Filtrar apenas os pontos *dentro* do munic√≠pio
dados_ride_latlong <- st_filter(dados_latlong_sf_proj, ride_sf)  # ‚úÖ correto!
dados_ride_latlong <- dados_ride_latlong[seq(1, nrow(dados_ride_latlong), by = 18), ] #15 x18 16 

# 6. Criar banco com latitude/longitude (graus decimais)
dados_latlong <- dados_ride_latlong %>%
  mutate(
    x = st_coordinates(geometry)[,1],
    y = st_coordinates(geometry)[,2]
  ) %>%
  select(lst_c, x, y) %>%
  as.data.frame() %>%
  select(-geometry) %>% 
  rename(avg_z=lst_c)

# 7. Transformar para UTM (zona 23S - SIRGAS 2000 / EPSG:31983)
dados_utm_sf <- st_transform(dados_ride_latlong, crs = 31983)

# 8. Criar banco com coordenadas UTM (em metros)
dados_utm <- dados_utm_sf %>%
  mutate(
    x = st_coordinates(geometry)[,1],
    y = st_coordinates(geometry)[,2]
  ) %>%
  select(lst_c, x, y) %>%
  as.data.frame() %>%
  select(-geometry)%>% 
  rename(avg_z=lst_c)



# 9. Exportar os dois arquivos
write.csv(dados_latlong, "RIDE_temp_latlong.csv", row.names = FALSE)
write.csv(dados_utm,     "RIDE_temp_utm.csv",     row.names = FALSE)

#set.seed(181326) 
#set.seed(181019)# para reprodutibilidade
set.seed(020279)
dados_utm_sf_amostra <- dados_utm_sf |> 
  rename(temp = lst_c) |>
  sample_n(150)
```


```{r}
ggplot() +
  geom_sf(data = ride_sf, fill = NA, color = "black", linewidth = 0.1) +  # pol√≠gono em preto
  geom_sf(data = dados_utm_sf_amostra, aes(color = temp), size = 2) +  # pontos coloridos
  scale_color_viridis_c(name = "Temperatura (¬∞C)") +
  theme_minimal() +
  labs(
    title = "Temperatura na regi√£o da RIDE",
    subtitle = "Valores extra√≠dos de MODIS (LST)",
    caption = "Fonte: MODIS via modisfast"
  )

```


```{r}
v <- variogram(temp ~ 1, data = dados_utm_sf_amostra)
v$dist <- v$dist / 1000  # converte dist√¢ncia para km

fv <- fit.variogram(v, model = vgm(psill = 15, model = "Sph", range = 200, nugget = 3))
plot(v, fv)

fv <- fit.variogram(v, model = vgm(psill = 15, model = "Gau", range = 200, nugget = 3))
plot(v, fv)

fv <- fit.variogram(v, model = vgm(psill = 10, model = "Exp", range = 200, nugget = 2))
plot(v, fv)
```

```{r}


# Transformar ambos para UTM zona 23S
ride_utm <- st_transform(ride_sf, 31983)


# ‚úÖ Verifica√ß√£o da vari√°vel de temperatura
names(dados_utm_sf_amostra)
summary(dados_utm_sf_amostra$temp)

# üìà Variograma emp√≠rico e ajuste
vc <- variogram(temp ~ 1, dados_utm_sf_amostra)
vinitial <- vgm(psill = 15, model = "Exp", range = 150000, nugget = 3)
fv <- fit.variogram(vc, model = vinitial)
plot(vc, fv)

# üî≥ Criar grade regular de pontos dentro da RIDE
grid <- st_make_grid(ride_utm, cellsize = 1000, what = "centers")
grid_sf <- st_sf(geometry = grid, crs = st_crs(ride_utm))
grid_sf <- grid_sf[ride_utm, ]

# ü§ñ Krigagem
k <- gstat(formula = temp ~ 1, data = dados_utm_sf_amostra, model = fv)
kpred <- predict(k, newdata = grid_sf)
kpred_sf <- st_as_sf(kpred)

# üåç Proje√ß√£o para latitude/longitude
ride_latlon <- st_transform(ride_utm, 4326)

kpred_latlon <- st_transform(kpred_sf, 4326)

# üé® Plot final com paleta magma + nomes dos munic√≠pios\


ggplot() +
  geom_sf(data = kpred_latlon, aes(color = var1.pred), size = 0.6) +
  geom_sf(data = ride_latlon, fill = NA, color = "black",linewidth = 0.1) +
  geom_sf_text(data = ride_latlon, aes(label = NM_MUNICIP), size = 2, color = "black")+   # 
  scale_color_viridis_c(name = "Temperatura prevista (¬∞C)", option = "magma") +
  theme_minimal() +
  labs(
    title = "Krigagem da Temperatura MODIS",
    subtitle = "Interpola√ß√£o espacial para a RIDE-DF",
    caption = "Fonte: MODIS via modisfast"
  )

```
```{r}

# üì¶ Pacotes
if (!require("pacman")) install.packages("pacman")
pacman::p_load(sf, gstat, stars, leaflet, viridis)

# üåç Reprojetar ambos para WGS84 (latitude/longitude)
ride_ll <- st_transform(ride_utm, 4326)
kpred_ll <- st_transform(st_as_sf(kpred), 4326)

# üé® Paleta de cores (magma)
pal <- colorNumeric(palette = "magma", domain = kpred_ll$var1.pred)

# üó∫Ô∏è Mapa interativo com limites e nomes dos munic√≠pios
leaflet() %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  addCircleMarkers(
    data = kpred_ll,
    radius = 3,
    fillColor = ~pal(var1.pred),
    fillOpacity = 0.7,
    stroke = FALSE,
    label = ~paste0("Temp: ", round(var1.pred, 1), " ¬∞C")
  ) %>%
  # Pol√≠gono com os munic√≠pios (com r√≥tulo interativo)
  addPolygons(
    data = ride_ll,
    color = "white",
    weight = 1,
    fillOpacity = 0,
    label = ~NM_MUNICIP  # altere aqui caso o nome esteja em outra coluna
  ) %>%
  
  # Limite da RIDE destacado em preto
  addPolygons(
    data = st_union(ride_ll),  # uni√£o dos pol√≠gonos para contorno da RIDE
    color = "black",
    weight = 2,
    fill = FALSE,
    label = "Limite da RIDE"
  ) %>%
  
  # Pontos de krigagem coloridos
  
  
  # Legenda
  addLegend(
    position = "bottomright",
    pal = pal,
    values = kpred_ll$var1.pred,
    title = "Temperatura prevista (¬∞C)",
    opacity = 1
  )




```


## Data & Methods {#sec-data-methods}

## Conclusion

## References {.unnumbered}

:::{#refs}

:::